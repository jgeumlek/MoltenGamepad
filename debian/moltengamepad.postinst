#!/bin/sh
# postinst script for moltengamepad
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package

MOLTENGAMEPAD=/usr/bin/moltengamepad
GAMEPADUSER=gamepad

trigger_udev() {
	if ! which udevadm >/dev/null 2>&1 ; then
		return 0;
	fi
	udevadm control --reload-rules || true
	udevadm trigger --subsystem-match=input --subsystem-match=misc --action=change || true
}


case "$1" in
    configure)
        if ! getent passwd $GAMEPADUSER >/dev/null; then
          adduser --disabled-password  --quiet --system \
            --home /dev/input --no-create-home\
            --gecos "MoltenGamepad user" --group $GAMEPADUSER
        fi
        if ! dpkg-statoverride --list "$MOLTENGAMEPAD" >/dev/null; then
          dpkg-statoverride --update --add $GAMEPADUSER root 4755 "$MOLTENGAMEPAD"
        fi

        trigger_udev
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
